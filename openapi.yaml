openapi: 3.0.3
info:
  title: Rezepte-App
  description: Eine API für die Verwaltung von Rezepten.
  version: 1.0.0
servers:
  servers:
    - url: 'http://localhost:8080'
      description: Entwicklungsserver
    - url: 'Dichlistdockerneu-env.eba-mv3t3g5c.eu-central-1.elasticbeanstalk.com'
      description: Produktionsserver


paths:
  /rezepte:
    get:
      summary:  Alle Rezepte abrufen
      operationId: getRezepte
      responses:
        '200':
          description: Erfolgreiche Anfrage
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object # Hier Rezept-Daten spezifizieren

    post:
      summary: Neue Rezepte erstellen
      operationId: createRezept
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object # Hier Rezept-Daten spezifizieren
      responses:
        '201':
          description: Rezept ganz erfolgreich erstellt
          content:
            application/json:
              schema:
                type: object # Hier Rezept-Daten spezifizieren

  /rezepte/{id}:
    get:
      summary: Ein einzelnes Rezept abrufen
      operationId: getRezepBytId
      parameters:
        - name: id
          in: path
          required: true
          description: Die ID des Rezepts
          schema:
            type: string
      responses:
        '200':
          description: Erfolgreiche Anfrage
          content:
            application/json:
              schema:
                type: object # s.o.
        '404':
          description: Rezept nicht gefunden

    put:
      summary: Rezept aktualisieren
      operationId: updateRezept
      parameters:
        - name: id
          in: path
          required: true
          description: Die ID des Rezepts
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Rezept erfolgreich aktualisiert
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Rezept nicht gefunden

    delete:
      summary: Rezept löschen
      operationId: deleteRezept
      parameters:
        - name: id
          in: path
          required: true
          description: Die ID des Rezepts
          schema:
            type: string
      responses:
        '204':
          description: Rezept erfolgreich gelöscht
        '404':
          description: Rezept nicht gefunden


  /tags/{id}:
    get:
      summary: Einen Tag anhand der ID abrufen
      operationId: getTagById
      parameters:
        - name: id
          in: path
          required: true
          description: Die ID des Tags
          schema:
            type: string
      responses:
        '200':
          description: Erfolgreiche Anfrage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '404':
          description: Tag nicht gefunden

    put:
      summary: Tag aktualisieren
      operationId: updateTag
      parameters:
        - name: id
          in: path
          required: true
          description: Die ID des Tags
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '200':
          description: Tag erfolgreich aktualisiert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '404':
          description: Tag nicht gefunden

    delete:
      summary: Tag löschen
      operationId: deleteTag
      parameters:
        - name: id
          in: path
          required: true
          description: Die ID des Tags
          schema:
            type: string
      responses:
        '204':
          description: Tag erfolgreich gelöscht
        '404':
          description: Tag nicht gefunden

components:
  schemas:
    Rezept:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Die eindeutige ID des Rezepts
        name:
          type: string
          description: Der Name des Rezepts
        onlineAdresse:
          type: string
          description: Die URL des Rezepts
        datum:
          type: string
          format: date
          description: Das Datum, an dem das Rezept erstellt wurde
        status:
          type: boolean
          description: Der Status des Rezepts
        bewertung:
          type: integer
          format: int32
          description: Die Bewertung des Rezepts
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          description: Die Tags, die mit dem Rezept verknüpft sind

    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Die eindeutige ID des Tags
        label:
          type: string
          description: Die Bezeichnung des Tags
        severity:
          type: string
          description: Der Schweregrad fuer die Darstelliung der Farbe des Tags in der Desktopversion

